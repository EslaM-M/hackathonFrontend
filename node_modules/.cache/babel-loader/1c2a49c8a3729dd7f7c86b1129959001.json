{"ast":null,"code":"import _slicedToArray from \"/home/eslam/Development/work/gandalf-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/eslam/Development/work/gandalf-dashboard/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport classes from \"./App.css\";\nimport { Auth } from \"./containers\";\nimport Router from \"./router\";\nimport { Layout } from \"./components\";\nimport { validateToken, initializeSentry } from \"./store/util\";\nimport store from \"./store\";\nimport { useSelector } from \"react-redux\";\nimport { loginSuccessful } from \"./store/actions\";\n\nfunction App() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isStoreInitialized = _useState2[0],\n        setStoreInitialized = _useState2[1];\n\n  const isLoggedIn = useSelector(state => state.auth.loggedIn); // Initialize store from localstorage\n\n  useEffect(() => {\n    const checkValidToken = validateToken();\n\n    if (checkValidToken.isValid) {\n      initializeSentry(checkValidToken.authData.userId);\n      store.dispatch(loginSuccessful(checkValidToken.authData));\n    }\n\n    setStoreInitialized(true);\n  }, []);\n  if (!isStoreInitialized) return null;\n  return React.createElement(React.Fragment, null, !isLoggedIn ? React.createElement(Auth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/eslam/Development/work/gandalf-dashboard/src/App.js"],"names":["React","useEffect","useState","classes","Auth","Router","Layout","validateToken","initializeSentry","store","useSelector","loginSuccessful","App","isStoreInitialized","setStoreInitialized","isLoggedIn","state","auth","loggedIn","checkValidToken","isValid","authData","userId","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,cAAhD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,iBAAhC;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACqCV,QAAQ,CAAC,KAAD,CAD7C;AAAA;AAAA,QACNW,kBADM;AAAA,QACcC,mBADd;;AAEb,QAAMC,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,QAArB,CAA9B,CAFa,CAIb;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,eAAe,GAAGZ,aAAa,EAArC;;AACA,QAAIY,eAAe,CAACC,OAApB,EAA4B;AAC1BZ,MAAAA,gBAAgB,CAACW,eAAe,CAACE,QAAhB,CAAyBC,MAA1B,CAAhB;AACAb,MAAAA,KAAK,CAACc,QAAN,CAAeZ,eAAe,CAACQ,eAAe,CAACE,QAAjB,CAA9B;AACD;;AAEDP,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GARQ,EAQN,EARM,CAAT;AAUA,MAAI,CAACD,kBAAL,EAAyB,OAAO,IAAP;AAEzB,SACE,0CACG,CAACE,UAAD,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJJ,CADF;AAYD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classes from \"./App.css\";\nimport { Auth } from \"./containers\";\nimport Router from \"./router\";\nimport { Layout } from \"./components\";\nimport { validateToken, initializeSentry } from \"./store/util\";\nimport store from \"./store\";\nimport { useSelector } from \"react-redux\";\nimport { loginSuccessful } from \"./store/actions\";\n\nfunction App() {\n  const [isStoreInitialized, setStoreInitialized] = useState(false);\n  const isLoggedIn = useSelector(state => state.auth.loggedIn);\n  \n  // Initialize store from localstorage\n  useEffect(() => {\n    const checkValidToken = validateToken();\n    if (checkValidToken.isValid){\n      initializeSentry(checkValidToken.authData.userId);\n      store.dispatch(loginSuccessful(checkValidToken.authData));\n    }\n\n    setStoreInitialized(true);\n  }, []);\n\n  if (!isStoreInitialized) return null;\n\n  return (\n    <>\n      {!isLoggedIn ? (\n        <Auth />\n      ) : (\n        <Layout>\n          <Router />\n        </Layout>\n      )}\n    </>\n  );\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}