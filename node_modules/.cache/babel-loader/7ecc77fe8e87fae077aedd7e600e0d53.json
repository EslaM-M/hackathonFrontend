{"ast":null,"code":"import axios from 'axios';\nimport store from '../store';\nimport { logout } from '../store/actions';\nimport { validateToken } from '../store/util';\nimport endpoints from './endpoints';\nconst FRIES_API = \"/fries/api/v1/analytics\";\nconst instance = axios.create({\n  baseURL: window._env_.REACT_APP_API_URL\n});\ninstance.interceptors.request.use(config => {\n  // Don't intercept login request\n  if (config.url === endpoints.sign_in) return config; // Add auth token to each request if exists/valid\n\n  const checkValidToken = validateToken();\n\n  if (checkValidToken.isValid) {\n    const token = checkValidToken.authData.token;\n    config.baseURL += FRIES_API;\n    config.headers.Authorization = \"Bearer \".concat(token);\n    return config;\n  } else {\n    // Else logout and don't continue the request\n    store.dispatch(logout());\n    return;\n  }\n});\nexport default instance;","map":{"version":3,"sources":["/home/eslam/Development/work/gandalf-dashboard/src/api/index.js"],"names":["axios","store","logout","validateToken","endpoints","FRIES_API","instance","create","baseURL","window","_env_","REACT_APP_API_URL","interceptors","request","use","config","url","sign_in","checkValidToken","isValid","token","authData","headers","Authorization","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,SAAS,GAAG,yBAAlB;AAEA,MAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEC,MAAM,CAACC,KAAP,CAAaC;AADI,CAAb,CAAjB;AAKAL,QAAQ,CAACM,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkCC,MAAM,IAAI;AAExC;AACA,MAAIA,MAAM,CAACC,GAAP,KAAeZ,SAAS,CAACa,OAA7B,EACI,OAAOF,MAAP,CAJoC,CAMxC;;AACA,QAAMG,eAAe,GAAGf,aAAa,EAArC;;AACA,MAAIe,eAAe,CAACC,OAApB,EAA6B;AACzB,UAAMC,KAAK,GAAGF,eAAe,CAACG,QAAhB,CAAyBD,KAAvC;AACAL,IAAAA,MAAM,CAACP,OAAP,IAAkBH,SAAlB;AACAU,IAAAA,MAAM,CAACO,OAAP,CAAeC,aAAf,oBAAyCH,KAAzC;AACA,WAAOL,MAAP;AACH,GALD,MAMK;AACD;AACAd,IAAAA,KAAK,CAACuB,QAAN,CAAetB,MAAM,EAArB;AACA;AACH;AACJ,CAnBD;AAoBA,eAAeI,QAAf","sourcesContent":["import axios from 'axios';\nimport store from '../store'\nimport { logout } from '../store/actions'\nimport { validateToken } from '../store/util';\nimport endpoints from './endpoints';\n\nconst FRIES_API = \"/fries/api/v1/analytics\";\n\nconst instance = axios.create({\n    baseURL: window._env_.REACT_APP_API_URL\n})\n\n\ninstance.interceptors.request.use(config => {\n\n    // Don't intercept login request\n    if (config.url === endpoints.sign_in)\n        return config;\n\n    // Add auth token to each request if exists/valid\n    const checkValidToken = validateToken();\n    if (checkValidToken.isValid) {\n        const token = checkValidToken.authData.token;\n        config.baseURL += FRIES_API;\n        config.headers.Authorization = `Bearer ${token}`;\n        return config;\n    }\n    else {\n        // Else logout and don't continue the request\n        store.dispatch(logout())\n        return;\n    }\n});\nexport default instance;"]},"metadata":{},"sourceType":"module"}