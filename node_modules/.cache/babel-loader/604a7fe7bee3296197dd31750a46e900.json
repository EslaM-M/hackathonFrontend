{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport API from '../../api';\nimport endpoints from '../../api/endpoints';\n\nconst loginStart = () => {\n  return {\n    type: actionTypes.LOGIN_START\n  };\n};\n\nexport const loginSuccessful = authData => {\n  return {\n    type: actionTypes.LOGIN_SUCCESSFUL,\n    authData\n  };\n};\nexport const loginFailed = error => {\n  return {\n    type: actionTypes.LOGIN_FAILED,\n    error\n  };\n};\nexport const login = (email, password) => {\n  const userData = {\n    email,\n    password\n  };\n  return dispatch => {\n    dispatch(loginStart());\n    API.post(endpoints.sign_in, userData).then(response => {\n      const data = response.data;\n      const token = data.token,\n            role = data.role,\n            owner = data.owner,\n            createdAt = data.createdAt,\n            expiry_date = data.expiry_date,\n            refresh_token = data.refresh_token,\n            is_expired = data.is_expired;\n      const authData = {\n        role,\n        token,\n        is_expired,\n        userId: owner,\n        created_at: createdAt,\n        expires_at: expiry_date,\n        refresh_token\n      };\n      localStorage.setItem('auth_data', JSON.stringify(authData));\n      dispatch(loginSuccessful(authData));\n    }).catch(err => {\n      dispatch(loginFailed(err.response));\n    });\n  };\n};\nexport const logout = () => {\n  localStorage.clear();\n  return {\n    type: actionTypes.LOG_OUT\n  };\n};","map":{"version":3,"sources":["/home/eslam/Development/work/gandalf-dashboard/src/store/actions/auth.js"],"names":["actionTypes","API","endpoints","loginStart","type","LOGIN_START","loginSuccessful","authData","LOGIN_SUCCESSFUL","loginFailed","error","LOGIN_FAILED","login","email","password","userData","dispatch","post","sign_in","then","response","data","token","role","owner","createdAt","expiry_date","refresh_token","is_expired","userId","created_at","expires_at","localStorage","setItem","JSON","stringify","catch","err","logout","clear","LOG_OUT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK;AADf,GAAP;AAGH,CAJD;;AAKA,OAAO,MAAMC,eAAe,GAAGC,QAAQ,IAAI;AACvC,SAAO;AACHH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,gBADf;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAME,WAAW,GAAGC,KAAK,IAAI;AAChC,SAAO;AACHN,IAAAA,IAAI,EAAEJ,WAAW,CAACW,YADf;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtC,QAAMC,QAAQ,GAAG;AACbF,IAAAA,KADa;AAEbC,IAAAA;AAFa,GAAjB;AAIA,SAAOE,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACb,UAAU,EAAX,CAAR;AACAF,IAAAA,GAAG,CAACgB,IAAJ,CAASf,SAAS,CAACgB,OAAnB,EAA4BH,QAA5B,EACKI,IADL,CACUC,QAAQ,IAAI;AAAA,YACNC,IADM,GACGD,QADH,CACNC,IADM;AAAA,YAENC,KAFM,GAEoED,IAFpE,CAENC,KAFM;AAAA,YAECC,IAFD,GAEoEF,IAFpE,CAECE,IAFD;AAAA,YAEOC,KAFP,GAEoEH,IAFpE,CAEOG,KAFP;AAAA,YAEcC,SAFd,GAEoEJ,IAFpE,CAEcI,SAFd;AAAA,YAEyBC,WAFzB,GAEoEL,IAFpE,CAEyBK,WAFzB;AAAA,YAEsCC,aAFtC,GAEoEN,IAFpE,CAEsCM,aAFtC;AAAA,YAEqDC,UAFrD,GAEoEP,IAFpE,CAEqDO,UAFrD;AAGd,YAAMrB,QAAQ,GAAG;AACbgB,QAAAA,IADa;AAEbD,QAAAA,KAFa;AAGbM,QAAAA,UAHa;AAIbC,QAAAA,MAAM,EAAEL,KAJK;AAKbM,QAAAA,UAAU,EAAEL,SALC;AAMbM,QAAAA,UAAU,EAAEL,WANC;AAObC,QAAAA;AAPa,OAAjB;AASAK,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAe5B,QAAf,CAAlC;AACAS,MAAAA,QAAQ,CAACV,eAAe,CAACC,QAAD,CAAhB,CAAR;AAEH,KAhBL,EAiBK6B,KAjBL,CAiBWC,GAAG,IAAI;AACVrB,MAAAA,QAAQ,CAACP,WAAW,CAAC4B,GAAG,CAACjB,QAAL,CAAZ,CAAR;AACH,KAnBL;AAoBH,GAtBD;AAuBH,CA5BM;AA8BP,OAAO,MAAMkB,MAAM,GAAG,MAAM;AACxBN,EAAAA,YAAY,CAACO,KAAb;AACA,SAAO;AACHnC,IAAAA,IAAI,EAAEJ,WAAW,CAACwC;AADf,GAAP;AAGH,CALM","sourcesContent":["import * as actionTypes from './actionTypes'\nimport API from '../../api'\nimport endpoints from '../../api/endpoints'\n\nconst loginStart = () => {\n    return {\n        type: actionTypes.LOGIN_START\n    }\n}\nexport const loginSuccessful = authData => {\n    return {\n        type: actionTypes.LOGIN_SUCCESSFUL,\n        authData\n    }\n}\nexport const loginFailed = error => {\n    return {\n        type: actionTypes.LOGIN_FAILED,\n        error\n    }\n}\n\nexport const login = (email, password) => {\n    const userData = {\n        email,\n        password\n    }\n    return dispatch => {\n        dispatch(loginStart())\n        API.post(endpoints.sign_in, userData)\n            .then(response => {\n                const { data } = response\n                const { token, role, owner, createdAt, expiry_date, refresh_token, is_expired } = data\n                const authData = {\n                    role,\n                    token,\n                    is_expired,\n                    userId: owner,\n                    created_at: createdAt,\n                    expires_at: expiry_date,\n                    refresh_token\n                }\n                localStorage.setItem('auth_data', JSON.stringify(authData))\n                dispatch(loginSuccessful(authData))\n\n            })\n            .catch(err => {\n                dispatch(loginFailed(err.response))\n            })\n    }\n}\n\nexport const logout = () => {\n    localStorage.clear()\n    return {\n        type: actionTypes.LOG_OUT\n    }\n};"]},"metadata":{},"sourceType":"module"}