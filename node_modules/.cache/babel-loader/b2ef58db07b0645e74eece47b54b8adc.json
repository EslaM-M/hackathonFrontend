{"ast":null,"code":"import _objectSpread from \"/home/eslam/Development/work/gandalf-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  loggedIn: false,\n  error: false,\n  loading: false,\n  authData: {},\n  errorMessage: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case actionTypes.LOGIN_SUCCESSFUL:\n      return _objectSpread({}, state, {\n        loading: false,\n        loggedIn: true,\n        authData: action.authData\n      });\n\n    case actionTypes.LOGIN_FAILED:\n      //Capitalize error message \n      const message = action.error.data.message;\n      const errorMessage = message.charAt(0).toUpperCase() + message.replace(message.charAt(0), \"\");\n      return _objectSpread({}, state, {\n        loading: false,\n        error: true,\n        errorMessage\n      });\n\n    case actionTypes.LOG_OUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/home/eslam/Development/work/gandalf-dashboard/src/store/reducers/auth.js"],"names":["actionTypes","initialState","loggedIn","error","loading","authData","errorMessage","authReducer","state","action","type","LOGIN_START","LOGIN_SUCCESSFUL","LOGIN_FAILED","message","data","charAt","toUpperCase","replace","LOG_OUT"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,KADO;AAEjBC,EAAAA,KAAK,EAAE,KAFU;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,YAAY,EAAE;AALG,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,WAAW,CAACW,WAAjB;AACI,+BACOH,KADP;AAEIJ,QAAAA,OAAO,EAAE;AAFb;;AAKJ,SAAKJ,WAAW,CAACY,gBAAjB;AACI,+BACOJ,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIF,QAAAA,QAAQ,EAAE,IAHd;AAIIG,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAJrB;;AAMJ,SAAKL,WAAW,CAACa,YAAjB;AACI;AADJ,YAEYC,OAFZ,GAEwBL,MAAM,CAACN,KAAP,CAAaY,IAFrC,CAEYD,OAFZ;AAGI,YAAMR,YAAY,GAAGQ,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,WAAlB,KAAkCH,OAAO,CAACI,OAAR,CAAgBJ,OAAO,CAACE,MAAR,CAAe,CAAf,CAAhB,EAAmC,EAAnC,CAAvD;AACA,+BACOR,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGID,QAAAA,KAAK,EAAE,IAHX;AAIIG,QAAAA;AAJJ;;AAMJ,SAAKN,WAAW,CAACmB,OAAjB;AACI,aAAOlB,YAAP;;AACJ;AACI,aAAOO,KAAP;AA3BR;AA6BH,CA9BD;;AAiCA,eAAeD,WAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nconst initialState = {\n    loggedIn: false,\n    error: false,\n    loading: false,\n    authData: {},\n    errorMessage: null\n}\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_START:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case actionTypes.LOGIN_SUCCESSFUL:\n            return {\n                ...state,\n                loading: false,\n                loggedIn: true,\n                authData: action.authData\n            }\n        case actionTypes.LOGIN_FAILED:\n            //Capitalize error message \n            const { message } = action.error.data;\n            const errorMessage = message.charAt(0).toUpperCase() + message.replace(message.charAt(0), \"\")\n            return {\n                ...state,\n                loading: false,\n                error: true,\n                errorMessage\n            }\n        case actionTypes.LOG_OUT:\n            return initialState;\n        default:\n            return state\n    }\n}\n\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}